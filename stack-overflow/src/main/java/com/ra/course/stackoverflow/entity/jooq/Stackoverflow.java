/*
 * This file is generated by jOOQ.
 */
package com.ra.course.stackoverflow.entity.jooq;


import com.ra.course.stackoverflow.entity.jooq.tables.AccountTable;
import com.ra.course.stackoverflow.entity.jooq.tables.AnswerTable;
import com.ra.course.stackoverflow.entity.jooq.tables.CommentTable;
import com.ra.course.stackoverflow.entity.jooq.tables.QuestionTable;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Stackoverflow extends SchemaImpl {

    private static final long serialVersionUID = -551825750;

    /**
     * The reference instance of <code>stackoverflow</code>
     */
    public static final Stackoverflow STACKOVERFLOW = new Stackoverflow();

    /**
     * The table <code>stackoverflow.account</code>.
     */
    public final AccountTable ACCOUNT_TABLE = AccountTable.ACCOUNT_TABLE;

    /**
     * The table <code>stackoverflow.answer</code>.
     */
    public final AnswerTable ANSWER_TABLE = AnswerTable.ANSWER_TABLE;

    /**
     * The table <code>stackoverflow.comment</code>.
     */
    public final CommentTable COMMENT_TABLE = CommentTable.COMMENT_TABLE;

    /**
     * The table <code>stackoverflow.question</code>.
     */
    public final QuestionTable QUESTION_TABLE = QuestionTable.QUESTION_TABLE;

    /**
     * No further instances allowed
     */
    private Stackoverflow() {
        super("stackoverflow", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AccountTable.ACCOUNT_TABLE,
            AnswerTable.ANSWER_TABLE,
            CommentTable.COMMENT_TABLE,
            QuestionTable.QUESTION_TABLE);
    }
}
