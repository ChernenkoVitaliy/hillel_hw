/*
 * This file is generated by jOOQ.
 */
package com.ra.course.stackoverflow.entity.jooq.tables.records;


import com.ra.course.stackoverflow.entity.jooq.tables.QuestionTable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.processing.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionRecord extends UpdatableRecordImpl<QuestionRecord> implements Record10<Integer, String, String, Integer, Integer, Timestamp, Timestamp, String, String, Integer> {

    private static final long serialVersionUID = 1935553213;

    /**
     * Setter for <code>stackoverflow.question.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>stackoverflow.question.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>stackoverflow.question.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>stackoverflow.question.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>stackoverflow.question.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>stackoverflow.question.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>stackoverflow.question.view_count</code>.
     */
    public void setViewCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>stackoverflow.question.view_count</code>.
     */
    public Integer getViewCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>stackoverflow.question.vote_count</code>.
     */
    public void setVoteCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>stackoverflow.question.vote_count</code>.
     */
    public Integer getVoteCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>stackoverflow.question.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>stackoverflow.question.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>stackoverflow.question.updated</code>.
     */
    public void setUpdated(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>stackoverflow.question.updated</code>.
     */
    public Timestamp getUpdated() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>stackoverflow.question.status</code>.
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>stackoverflow.question.status</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>stackoverflow.question.closing_remark</code>.
     */
    public void setClosingRemark(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>stackoverflow.question.closing_remark</code>.
     */
    public String getClosingRemark() {
        return (String) get(8);
    }

    /**
     * Setter for <code>stackoverflow.question.author_id</code>.
     */
    public void setAuthorId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>stackoverflow.question.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, Integer, Integer, Timestamp, Timestamp, String, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, Integer, Integer, Timestamp, Timestamp, String, String, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return QuestionTable.QUESTION_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return QuestionTable.QUESTION_TABLE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return QuestionTable.QUESTION_TABLE.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return QuestionTable.QUESTION_TABLE.VIEW_COUNT;
    }

    @Override
    public Field<Integer> field5() {
        return QuestionTable.QUESTION_TABLE.VOTE_COUNT;
    }

    @Override
    public Field<Timestamp> field6() {
        return QuestionTable.QUESTION_TABLE.CREATED;
    }

    @Override
    public Field<Timestamp> field7() {
        return QuestionTable.QUESTION_TABLE.UPDATED;
    }

    @Override
    public Field<String> field8() {
        return QuestionTable.QUESTION_TABLE.STATUS;
    }

    @Override
    public Field<String> field9() {
        return QuestionTable.QUESTION_TABLE.CLOSING_REMARK;
    }

    @Override
    public Field<Integer> field10() {
        return QuestionTable.QUESTION_TABLE.AUTHOR_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getViewCount();
    }

    @Override
    public Integer component5() {
        return getVoteCount();
    }

    @Override
    public Timestamp component6() {
        return getCreated();
    }

    @Override
    public Timestamp component7() {
        return getUpdated();
    }

    @Override
    public String component8() {
        return getStatus();
    }

    @Override
    public String component9() {
        return getClosingRemark();
    }

    @Override
    public Integer component10() {
        return getAuthorId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getViewCount();
    }

    @Override
    public Integer value5() {
        return getVoteCount();
    }

    @Override
    public Timestamp value6() {
        return getCreated();
    }

    @Override
    public Timestamp value7() {
        return getUpdated();
    }

    @Override
    public String value8() {
        return getStatus();
    }

    @Override
    public String value9() {
        return getClosingRemark();
    }

    @Override
    public Integer value10() {
        return getAuthorId();
    }

    @Override
    public QuestionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuestionRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public QuestionRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public QuestionRecord value4(Integer value) {
        setViewCount(value);
        return this;
    }

    @Override
    public QuestionRecord value5(Integer value) {
        setVoteCount(value);
        return this;
    }

    @Override
    public QuestionRecord value6(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public QuestionRecord value7(Timestamp value) {
        setUpdated(value);
        return this;
    }

    @Override
    public QuestionRecord value8(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public QuestionRecord value9(String value) {
        setClosingRemark(value);
        return this;
    }

    @Override
    public QuestionRecord value10(Integer value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public QuestionRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, Timestamp value6, Timestamp value7, String value8, String value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionRecord
     */
    public QuestionRecord() {
        super(QuestionTable.QUESTION_TABLE);
    }

    /**
     * Create a detached, initialised QuestionRecord
     */
    public QuestionRecord(Integer id, String title, String description, Integer viewCount, Integer voteCount, Timestamp created, Timestamp updated, String status, String closingRemark, Integer authorId) {
        super(QuestionTable.QUESTION_TABLE);

        set(0, id);
        set(1, title);
        set(2, description);
        set(3, viewCount);
        set(4, voteCount);
        set(5, created);
        set(6, updated);
        set(7, status);
        set(8, closingRemark);
        set(9, authorId);
    }
}
